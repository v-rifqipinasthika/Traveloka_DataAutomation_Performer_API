<Activity mc:Ignorable="sap sap2010" x:Class="Generate_PasswordDigest" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_credNonce" Type="OutArgument(x:String)" />
    <x:Property Name="out_credCreated" Type="OutArgument(x:String)" />
    <x:Property Name="out_credPassword" Type="OutArgument(x:String)" />
    <x:Property Name="in_password" Type="InArgument(x:String)" />
  </x:Members>
  <this:Generate_PasswordDigest.in_password>
    <InArgument x:TypeArguments="x:String" />
  </this:Generate_PasswordDigest.in_password>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>567.3333333333334,746.6666666666666</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Generate_PasswordDigest_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Generate password digest to be used as SOAP request in amadeus API" DisplayName="Generate_PasswordDigest" sap:VirtualizedContainerService.HintSize="500.6666666666667,682" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="438.6666666666667,96" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;STEP : Generate_PasswordDigest&quot;]" />
    <TryCatch DisplayName="Try Catch Generate API Credential" sap:VirtualizedContainerService.HintSize="438.6666666666667,404.6666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="string nonce;&#xA;byte[] nonceValue = new byte[16];&#xA;new System.Random().NextBytes(nonceValue);&#xA;nonce = Convert.ToBase64String(nonceValue);&#xA;&#xA;DateTime now = DateTime.UtcNow;&#xA;string created = now.ToString(&quot;yyyy-MM-dd'T'HH:mm:ss.fff'Z'&quot;);&#xA;string password = in_password; // Base64-encoded &quot;abcdef&quot;&#xA;&#xA;byte[] encryptedPassword;&#xA;using (System.Security.Cryptography.SHA1Managed sha1 = new System.Security.Cryptography.SHA1Managed())&#xA;{&#xA;    byte[] passwordBytes = Encoding.UTF8.GetBytes(password);&#xA;    encryptedPassword = sha1.ComputeHash(passwordBytes);&#xA;}&#xA;&#xA;byte[] b1 = !string.IsNullOrEmpty(nonce) ? Convert.FromBase64String(nonce) : new byte[0];&#xA;byte[] b2 = Encoding.UTF8.GetBytes(created);&#xA;byte[] b3 = encryptedPassword;&#xA;byte[] b4 = new byte[b1.Length + b2.Length + b3.Length];&#xA;&#xA;int offset = 0;&#xA;Buffer.BlockCopy(b1, 0, b4, offset, b1.Length);&#xA;offset += b1.Length;&#xA;Buffer.BlockCopy(b2, 0, b4, offset, b2.Length);&#xA;offset += b2.Length;&#xA;Buffer.BlockCopy(b3, 0, b4, offset, b3.Length);&#xA;&#xA;byte[] digestBytes;&#xA;using (System.Security.Cryptography.SHA1Managed sha1 = new System.Security.Cryptography.SHA1Managed())&#xA;{&#xA;    digestBytes = sha1.ComputeHash(b4);&#xA;}&#xA;&#xA;string passwordDigest = Convert.ToBase64String(digestBytes);&#xA;&#xA;out_created = created;&#xA;out_nonce = nonce;&#xA;out_password = passwordDigest;&#xA;&#xA;// Output the results&#xA;//Console.WriteLine($&quot;Nonce: {nonce}&quot;);&#xA;//Console.WriteLine($&quot;Created: {created}&quot;);&#xA;//Console.WriteLine($&quot;Password Digest: {passwordDigest}&quot;);&#xA;" DisplayName="Invoke Code Generate API Credential" sap:VirtualizedContainerService.HintSize="334,165.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
          <ui:InvokeCode.Arguments>
            <OutArgument x:TypeArguments="x:String" x:Key="out_nonce">[out_credNonce]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_created">[out_credCreated]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="out_password">[out_credPassword]</OutArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_password">[in_password]</InArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Throw DisplayName="Throw Inner Exception" Exception="[exception.InnerException]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>